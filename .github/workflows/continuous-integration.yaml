---
name: Continuous Integration

on:
    pull_request:
        branches: [main, develop]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
    cancel-in-progress: true

env:
    CI: true
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    PNPM_CACHE_FOLDER: .pnpm-store

permissions:
    checks: write
    contents: write

jobs:
    build:
        name: Build packages
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [16.x]
                pnpm-version: [6.x]
                os: [ubuntu-latest]
        steps:
            - name: Checkout to ${{ github.repository }} repository
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              uses: pnpm/action-setup@v2.0.1
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: true

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - name: Execute package.json script "build"
              run: pnpm build

            - name: "Upload built packages artifacts"
              uses: actions/upload-artifact@v2
              with:
                  if-no-files-found: error
                  name: Packages artifacts
                  path: |
                    helpers/build/
                    packages/**/dist/
        timeout-minutes: 5

    eslint:
        name: ESLint - statically analyze the JavaScript code
        needs: [build]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                pnpm-version: [6.x]
                os: [ubuntu-latest]
        steps:
            - name: Checkout to ${{ github.repository }} repository
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              uses: pnpm/action-setup@v2.0.1
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: true

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - name: Download Build Artifacts
              uses: actions/download-artifact@v2

            - name: Execute ESLint
              run: >
                  pnpm eslint .
                  --ext .json,.ts,.yaml,.yml,.vue
        timeout-minutes: 5

    markdownlint:
        name: markdownlint - validate markdown files
        needs: [build]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                pnpm-version: [6.x]
                os: [ubuntu-latest]
        timeout-minutes: 5
        steps:
            - name: Checkout to ${{ github.repository }} repository
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              uses: pnpm/action-setup@v2.0.1
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: true

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - name: Download Build Artifacts
              uses: actions/download-artifact@v2

            - name: Execute markdownlint
              run: >
                pnpm markdownlint .
                --dot
                --ignore-path .gitignore

    prettier:
        name: Prettier - check code formatting style
        needs: [build]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                pnpm-version: [6.x]
                os: [ubuntu-latest]
        steps:
            - name: Checkout to ${{ github.repository }} repository
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              uses: pnpm/action-setup@v2.0.1
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: true

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - name: Download Build Artifacts
              uses: actions/download-artifact@v2

            - name: Execute Prettier script
              run: >
                  pnpm pretty-quick
                  --branch HEAD~${{ github.event.pull_request.commits }}
                  --check
                  --verbose
        timeout-minutes: 5
