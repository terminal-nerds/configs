# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
---
# NOTE: CI -> Continuous Integration
# NOTE: CD -> Continuous Deployment
name: CI & CD

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]
    workflow_dispatch:
        inputs:
            reason:
                description: Reason of re-running this workflow
                required: false
                type: string

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash

env:
    CI: true

jobs:
    build:
        name: Build packages
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/build.yml
        uses: terminal-nerds/.github/.github/workflows/build.yml@main
        with:
            artifact-path: |
                ./packages/*/dist/
                ./shared/dist/

            artifact-upload: true
            include: "./packages/*/dist/**/*.{js,cjs,json}"
            script-build: build:pkgs

    lint-depcheck:
        # Analyze dependencies usage in package.json files
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: depcheck
            step-name: Lint dependencies with depcheck
            run: pnpm turbo run lint:deps

    lint-eslint:
        # Analyze the JavaScript codebase
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: ESLint
            step-name: Execute ESLint CLI task
            run: pnpm turbo run lint:js

    lint-markdownlint:
        # Analyze the markdownlint files
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: markdownlint
            step-name: Execute markdownlint CLI task
            run: pnpm turbo run lint:md

    lint-prettier:
        # Analyze the code format style
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: Prettier
            step-name: Execute "pretty-quick" CLI task
            run: pnpm turbo run lint:format

    lint-syncpack:
        # Analyze the package.json files to find dependencies mismatches
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: syncpack
            step-name: Execute syncpack CLI task
            run: pnpm lint:pkg

    lint-typescript:
        # Analyze the package.json files to find dependencies mismatches
        name: Lint
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/nodejs-script.yml
        uses: terminal-nerds/.github/.github/workflows/nodejs-script.yml@main
        needs: [build]
        with:
            download-build: true
            job-name: TypeScript
            step-name: Execute TypeScript CLI task
            run: pnpm turbo run lint:types

    security-codeql:
        if: github.ref_name == 'main'
        name: Security
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/codeql.yml
        uses: terminal-nerds/.github/.github/workflows/codeql.yml@main

    security-git-guardian:
        if: github.ref_name == 'main'
        name: Security
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/git-guardian.yml
        uses: terminal-nerds/.github/.github/workflows/git-guardian.yml@main
        secrets:
            GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

    security-snyk:
        if: github.ref_name == 'main'
        name: Security
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/snyk.yml
        uses: terminal-nerds/.github/.github/workflows/snyk.yml@main
        secrets:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    release:
        # Automatic release workflow with Changesets
        name: Release packages
        # https://github.com/terminal-nerds/.github/blob/main/.github/workflows/release.yml
        uses: terminal-nerds/.github/.github/workflows/release.yml@main
        needs:
            [
                build,
                lint-depcheck,
                lint-eslint,
                lint-markdownlint,
                lint-prettier,
                lint-syncpack,
                lint-typescript,
                security-codeql,
                security-git-guardian,
                security-snyk,
            ]
        secrets:
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
