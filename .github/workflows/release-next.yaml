# ---
# name: Release - @next
#
# on:
#     push:
#         branches: [main]
#
# env:
#     CI: true
#     PNPM_CACHE_FOLDER: .pnpm-store
#
# jobs:
#     release:
#         name: Release
#         runs-on: ${{ matrix.os }}
#         timeout-minutes: 5
#         strategy:
#             matrix:
#                 node-version: [16.x]
#                 pnpm-version: [6.x]
#                 os: [ubuntu-latest]
#         steps:
#             - name: Checkout to ${{ github.repository }}
#               uses: actions/checkout@v2
#               with:
#                   fetch-depth: 0
#
#             - name: Setup Node.js version ${{ matrix.node-version }}
#               uses: actions/setup-node@v2
#               with:
#                   node-version: ${{ matrix.node-version }}
#                   cache: "pnpm"
#
#             - name: Cache pnpm modules
#               uses: actions/cache@v2
#               with:
#                   path: ~/${{ env.PNPM_CACHE_FOLDER }}
#                   key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
#                   restore-keys: ${{ runner.os }}-
#
#             - name: Use pnpm version ${{ matrix.pnpm-version }}
#               with:
#                   version: ${{ matrix.pnpm-version }}
#                   run_install: true
#
#             - name: Setup ".npmrc"
#               run: >
#                   echo
#                   "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
#                   > .npmrc
#
#             - name: Changeset - enter prelease - @next
#               id: changesets-pre-enter
#               uses: changesets/action@v1
#               run: pnpm changeset pre enter next
#
#             - name: Build packages
#               run: pnpm build
#
#             - name: Changeset - update versions
#               id: changesets-version
#               uses: changesets/action@v1
#               run: pnpm changeset version
#
#             - name: Changeset - publish
#               id: changesets-publish
#               uses: changesets/action@v1
#               with:
#                   publish: pnpm changeset publish
#               env:
#                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#                   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#             # - name: Send a Slack notification if a publish happens
#             #   if: steps.changesets.outputs.published == 'true'
#             #   # You can do something when a publish happens.
#             #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
