# NOTE: CI -> Continuous Integration
---
name: CI

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash

env:
    CI: true
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    PNPM_CACHE_FOLDER: .pnpm-store

jobs:
    build:
        name: Build packages
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref }}

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Execute package.json script "build"
              run: pnpm build

            - name: Upload built packages
              # https://github.com/actions/upload-artifact
              uses: actions/upload-artifact@v2
              with:
                  if-no-files-found: error
                  name: built-packages
                  path: packages/*/dist/
        strategy:
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5

    eslint:
        name: Lint (ESLint) - statically analyze the JavaScript code
        needs: [build]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref }}

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Download built packages
              # https://github.com/actions/download-artifact
              uses: actions/download-artifact@v2

            - name: Extract built packages
              run: ./.github/extract-built-packages.sh

            - name: Execute ESLint
              run: >
                  DEBUG="eslint:cli-engine"
                  pnpm eslint .
                  --ext .json,.ts,.yaml,.yml,
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5

    markdownlint:
        name: Lint (markdownlint) - validate markdown files
        needs: [build]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref }}

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Download built packages
              # https://github.com/actions/download-artifact
              uses: actions/download-artifact@v2

            - name: Extract built packages
              run: ./.github/extract-built-packages.sh

            - name: Execute markdownlint
              run: >
                  pnpm markdownlint .
                  --dot
                  --ignore "./.changeset/*.md"
                  --ignore-path ".gitignore"
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5

    prettier:
        name: Lint (Prettier) - check code formatting style
        needs: [build]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref }}

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Download built packages
              # https://github.com/actions/download-artifact
              uses: actions/download-artifact@v2

            - name: Extract built packages
              run: ./.github/extract-built-packages.sh

            - name: Execute Prettier script
              run: >
                  pnpm pretty-quick
                  --branch HEAD~${{ github.event.pull_request.commits }}
                  --check
                  --verbose
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5

    syncpack:
        name: Lint (Syncpack) - check for depedencies mismatches
        needs: [build]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref }}

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Download built packages
              # https://github.com/actions/download-artifact
              uses: actions/download-artifact@v2

            - name: Extract built packages
              run: ./.github/extract-built-packages.sh

            - name: Execute syncpack script
              run: pnpm syncpack list-mismatches
        strategy:
            fail-fast: false
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5

    changelog:
        name: Changesets - generate changelog or publish
        if: ${{
            github.ref_name == 'main' &&
            github.repository_owner == 'terminal-nerds'
            }}
        needs: [build, eslint, markdownlint, prettier, syncpack]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout to ${{ github.repository }} repository
              # https://github.com/actions/checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Use pnpm version ${{ matrix.pnpm-version }}
              # https://github.com/pnpm/action-setup
              uses: pnpm/action-setup@v2.1.0
              with:
                  run_install: true
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js version ${{ matrix.node-version }}
              # https://github.com/actions/setup-node
              uses: actions/setup-node@v2
              with:
                  cache: "pnpm"
                  node-version: ${{ matrix.node-version }}

            - name: Download built packages
              # https://github.com/actions/download-artifact
              uses: actions/download-artifact@v2

            - name: Extract built packages
              run: ./.github/extract-built-packages.sh

            - name: Generate changelogs or release & publish with Changesets
              id: changesets
              # https://github.com/changesets/action
              uses: changesets/action@v1
              with:
                  commit: "chore(Changesets): üè∑Ô∏è Versioning package(s)"
                  publish: pnpm changeset publish
                  title: "chore(Changesets): üéâ Release package(s)"

            - name: Execute Prettier to fix CHANGELOG(s) file(s) format
              run: >
                  pnpm pretty-quick
                  --branch HEAD~${{ github.event.pull_request.commits }}
                  --verbose
        strategy:
            matrix:
                node-version: [16.x]
                os: [ubuntu-latest]
                pnpm-version: [6.x]
        timeout-minutes: 5
